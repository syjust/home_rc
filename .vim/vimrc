" default globals vim configuration
set autoindent
set expandtab
set number
set ruler
set undofile
set undodir=~/.vim/undo/
set background=dark
set shiftwidth=2
set softtabstop=2
set tabstop=2
set nocompatible " Because filetype detection doesn't work well in compatible mode
syntax enable

" pdv author doc bloc (php only)
" @todo expand for all doc block with UltiSnip bundle
let pdv_author="sylvain.just"

" Allow netrw to remove non-empty local directories
let g:netrw_localrmdir = 'rm -r'

" autosave remote sshfs on tmp local
autocmd BufWritePost ~/prod-tmp/syl/* :w! ~/save/prod/<afile>
autocmd BufWritePost ~/stag-tmp/syl/* :w! ~/save/stag/<afile>
autocmd BufWritePost ~/dev-tmp/syl/* :w! ~/save/dev/<afile>

" auto read .vim/ftplugin with filetype
filetype plugin on
execute pathogen#infect()

"""""""""""""""""""""""
" Vedbug xdebug tests "
"""""""""""""""""""""""
" :help Vdebug
call pathogen#helptags()

" add ?XDEBUG_SESSION_START=1 in your get URL to connect Browser to vim debug
" Once in debugging mode, the following default mappings are available:
" <F5>: start/run (to next breakpoint/end of script)
" <F2>: step over
" <F3>: step into
" <F4>: step out
" <F6>: stop debugging (kills script)
" <F7>: detach script from debugger
" <F9>: run to cursor
" <F10>: toggle line breakpoint
" <F11>: show context variables (e.g. after 'eval')
" <F12>: evaluate variable under cursor
" :Breakpoint <type> <args>: set a breakpoint of any type (see :help VdebugBreakpoints)
" :VdebugEval <code>: evaluate some code and display the result
" <Leader>e: evaluate the expression under visual highlight and display the result
" To stop debugging, press <F6>. Press it again to close the debugger interface.

":VdebugOpt debug_file ~/vdebug.log
":VdebugOpt debug_file_level 2

""""""""""""""
" Vedbug EOL "
""""""""""""""


" <C-k> open right panel with functions & contants
let g:Tlist_Ctags_Cmd   = "/usr/bin/ctags "
let g:Tlist_Auto_Update = 1
let g:Tlist_Sort_Type   = "name"
" common ctags-args for all env
" +cidf-v :
" +c  classes 
" +i  interfaces 
" +d  constant definitions 
" +f  functions 
" -v  variables 
" -j  javascript functions 
let g:ctags_common_args = ""
nnoremap <C-k> :Tlist<CR><C-w><C-h>
let mapleader = ","
" common <C-f> behavior
nnoremap <C-f> ye:copen<CR>:Ack <C-f>p<CR>
" map <C-g> for previous in tag-stack (inverse of <C-t>
map <C-G> :tag<cr>

" se history after pathogen#infect() because it seems be reloaded during bundle process
set history=500
