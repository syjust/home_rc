" default globals vim configuration
set autoindent
set laststatus=2 " always display filename
set expandtab
set number
set ruler
set undofile
set undodir=~/.vim/undo/
set background=dark
set shiftwidth=4
set softtabstop=4
set tabstop=4
set nocompatible " Because filetype detection doesn't work well in compatible mode
syntax enable

if !&diff
  " pdv author doc bloc (php only)
  " @todo expand for all doc block with UltiSnip bundle
  let pdv_author="sylvain.just"

  " Allow netrw to remove non-empty local directories
  let g:netrw_localrmdir = 'rm -r'

  " autosave remote sshfs on tmp local
  autocmd BufWritePost ~/prod-tmp/syl/* :w! ~/save/prod/<afile>
  autocmd BufWritePost ~/stag-tmp/syl/* :w! ~/save/stag/<afile>
  autocmd BufWritePost ~/dev-tmp/syl/* :w! ~/save/dev/<afile>

  " auto read .vim/ftplugin with filetype
  filetype plugin on
  execute pathogen#infect()

  source ~/.vim/vdebug.vim

  " <C-k> open right panel with functions & contants
  let g:Tlist_Ctags_Cmd   = "/usr/bin/ctags "
  let g:Tlist_Auto_Update = 1
  let g:Tlist_Sort_Type   = "name"
  " common ctags-args for all env
  " +cidf-v :
  " +c  classes
  " +i  interfaces
  " +d  constant definitions
  " +f  functions
  " -v  variables
  " -j  javascript functions
  let g:ctags_common_args = ""
  nnoremap <C-h> :Tlist<CR><C-w><C-h>
  nnoremap <C-k> 25k
  nnoremap <C-j> 25j
  let mapleader = ","
  " common <C-f> behavior
  nnoremap <C-f> ye:copen<CR>:Ack <C-f>p<CR>
  " map <C-g> for previous in tag-stack (inverse of <C-t>
  map <C-G> :tag<cr>

endif

" Search only over a visual range [http://vim.wikia.com/wiki/Search_only_over_a_visual_range]
function! RangeSearch(direction)
  call inputsave()
  let g:srchstr = input(a:direction)
  call inputrestore()
  if strlen(g:srchstr) > 0
    let g:srchstr = g:srchstr.
          \ '\%>'.(line("'<")-1).'l'.
          \ '\%<'.(line("'>")+1).'l'
  else
    let g:srchstr = ''
  endif
endfunction
vnoremap <silent> / :<C-U>call RangeSearch('/')<CR>:if strlen(g:srchstr) > 0\|exec '/'.g:srchstr\|endif<CR>
vnoremap <silent> ? :<C-U>call RangeSearch('?')<CR>:if strlen(g:srchstr) > 0\|exec '?'.g:srchstr\|endif<CR>

" foo bar baz ... metasyntactic variables
source ~/.vim/cycle-metasyntactic-variables.vim

" se history after pathogen#infect() because it seems be reloaded during bundle process
set history=500

" RED COLOR over 120th column
highlight OverLength ctermbg=darkred ctermfg=white guibg=#FFD9D9
match OverLength /\%121v.*/

let b:fugitive_blame_arguments = "--date short -b"
map <leader>b <Esc>:Gblame<Cr>

if &diff
    execute pathogen#infect('~/.vim/diff/{}')
    set diffopt+=iwhite
    set diffexpr=DiffW()
    function DiffW()
      let opt = ""
       if &diffopt =~ "icase"
         let opt = opt . "-i "
       endif
       if &diffopt =~ "iwhite"
         let opt = opt . "-w " " swapped vim's -b with -w
       endif
       silent execute "!diff -a --binary " . opt .
         \ v:fname_in . " " . v:fname_new .  " > " . v:fname_out
    endfunction
endif
