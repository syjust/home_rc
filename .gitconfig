[user]
  name         = Sylvain Just
  email        = sylvain.just.external@watchever.com
[core]
  editor       = vim
  excludesfile = ~/.gitconf/ignore_global
[merge]
  tool         = vimdiff
[alias]
  pwd          = "! git branch | grep -E '^\\*' | awk '{print $NF}'"
  dev          = "! git branch -a | grep develop"
  rel          = "! git branch -a | grep release"
  who          = "! f() { branch=${1:-remotes/origin/develop}; git for-each-ref --no-merge $branch --format='%(color:yellow)%(refname:short)%(color:reset) %(color:bold blue)<%(authorname)>%(color:reset) %(color:green)(%(committerdate:short))%(color:reset)' 'refs/remotes/origin/developments' | sort; }; f"
  mine         = "! f() { branch=${1:-remotes/origin/develop}; git for-each-ref --no-merge $branch --format='%(color:yellow)%(refname:short)%(color:reset) %(color:bold blue)<%(authorname)>%(color:reset) %(color:green)(%(committerdate:short))%(color:reset)' 'refs/remotes/origin/developments' | sort | grep Sylvain; }; f"
  switch       = "! f(){ d=${1-1}; git checkout `git reflog | awk '$3 ~ /checkout/ {print $6}' | head -n$d | tail -n1`; }; f"
  sw           = "! f(){ d=${1-1}; git checkout `git reflog | awk '$3 ~ /checkout/ {print $6}' | head -n$d | tail -n1`; }; f"
  swh          = "! f(){ git reflog | awk '$3 ~ /checkout/ {print $1\": checkout from \"$6}' | head -n40 | cat --number | odd-color.sh ; }; f"
  new          = "! f(){ git add -N $1; git add -p $1; }; f"
  assume       = update-index --assume-unchanged
  unassume     = update-index --no-assume-unchanged
  br           = branch
  ci           = commit
  cia          = commit --amend
  co           = checkout
  df           = diff
  ds           = diff --name-only
  lga          = log --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cd) %C(bold blue)<%an>%Creset' --abbrev=8 --abbrev-commit --date=iso --graph --all
  lg           = log --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cd) %C(bold blue)<%an>%Creset' --abbrev=8 --abbrev-commit --date=iso --graph
  l            = log --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev=8 --abbrev-commit --date=iso
  mg           = merge --no-commit
  rb           = rebase
  rbi          = rebase --interactive
  rba          = rebase --abort
  rbc          = rebase --continue
  st           = status -sb

  dft          = difftool -y
  mgt          = mergetool -y
  ls           = log --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev=8 --abbrev-commit --date=iso --stat
  lp           = log --abbrev=8 --abbrev-commit --date=iso --patch
  lh           = log --abbrev=8 --abbrev-commit --date=iso --patch --histogram
  pop          = stash pop
  sts          = stash
[color]
  branch       = auto
  diff         = auto
  status       = auto
  interactive  = auto
[push]
  default      = matching
[commit]
  template     = ~/.gitconf/commit-message.txt
[init]
	templatedir = ~/.gitconf/templates/
