[user]
  name         = Sylvain Just
  email        = sylvain.just.external@watchever.com
[core]
  editor       = vim
  excludesfile = ~/.gitconf/ignore_global
[merge]
  tool         = vimdiff
[alias]
  # BASICS
  ci           = commit
  cia          = commit --amend
  co           = checkout
  s            = status -sb
  st           = status -sb
  tst          = status -sb

  # BRANCHES ACTIONS
  pwd          = br -p
  bra          = br -a
  who          = br -w
  whop         = br -wp
  old          = br -o
  sw           = br --switch
  swh          = br --history
  mine         = br --mine
  m9           = br --m9
  m8           = br --m8
  dev          = "! git branch -a | grep develop"
  rel          = "! git branch -a | grep release"

  # INDEX
  empty        = "! f(){ git add -N $1; }; f" # new empty file
  assume       = update-index --assume-unchanged # ignore futures modifications
  unassume     = update-index --no-assume-unchanged # un-ignore futures modifications

  # LOG
  lg           = l -g
  la           = l -a
  lgs          = l -g -s
  lga          = l -g -a
  # log not in origin/develop
  ln           = l --not
  lns          = l --not --short

  # DIFF & MERGE
  df           = diff -U5
  dfs          = diff --name-only # diff short
  dfc          = diff -U5 --cached
  dft          = difftool -y
  mg           = merge -X ignore-space-change -X ignore-all-space -X ignore-space-at-eol
  mgn          = merge -X ignore-space-change -X ignore-all-space -X ignore-space-at-eol --no-commit
  mgt          = mergetool -y
  mga          = merge --abort
  
  # PUSH
  pushf        = push --force
  pushu        = "!git push --set-upstream origin `git pwd`"

  # ADVANCED REBASE ALIASES
  rb           = rebase -X ignore-space-change -X ignore-all-space -X ignore-space-at-eol -X ignore-blank-lines -X "diff-algorithm=histogram"
  rbii         = rebase -X ignore-space-change -X ignore-all-space -X ignore-space-at-eol -X ignore-blank-lines --interactive
  rbi          = rebase --interactive
  rba          = rebase --abort
  rbc          = rebase --continue

  # BISECT
  bss          = bisect start
  bsb          = bisect bad
  bsg          = bisect good
  bsr          = bisect reset

  # ADVANCED LOG FORMATS
  stat         = log --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev=8 --abbrev-commit --date=iso --stat
  lp           = log --abbrev=8 --abbrev-commit --date=iso --patch
  lh           = log --abbrev=8 --abbrev-commit --date=iso --patch --histogram

  # ADVANCED STASH COMMANDS
  pop          = stash pop
  save         = "! f() { local mess=\"$@\"; while [ -z \"$mess\" ] ; do echo -n \"give me a message : \" && read mess; done; git stash save -u \"$mess\"; }; f"
  ls           = stash list
  list         = stash list
[color]
  branch       = auto
  diff         = auto
  status       = auto
  interactive  = auto
[push]
  default      = simple
[commit]
  template     = ~/.gitconf/commit-message.txt
[init]
	templatedir = ~/.gitconf/templates/
